% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slidingWindowFeatureCounts.R
\name{swFeatureCounts}
\alias{swFeatureCounts}
\title{Summarize reads for different genomic features}
\usage{
swFeatureCounts(
  bamfiles = NULL,
  saf = NULL,
  isPairedEnd = TRUE,
  threads = 1L,
  checkFragLength = FALSE,
  requireBothEndsMapped = FALSE,
  minFragLength = 50L,
  maxFragLength = 1000L,
  minMQS = 0,
  verbose = FALSE
)
}
\arguments{
\item{bamfiles}{A named character(n), specifying paths to a set of BAM files.}

\item{saf}{A data frames containing sliding windows across the genome and
individual chromosome-level annotation in the SAF format. It should be the
output of the \code{\link[=generateGenomeSAF]{generateGenomeSAF()}} function.}

\item{isPairedEnd}{A logical(1), indicating whether the sequencing data is
paired-end or not.}

\item{threads}{An integer(1), number of threads for
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}} calling.}

\item{checkFragLength}{A logical(1), indicating if the two ends from the
same fragment are required to satisify the fragment length criteria
before the fragment can be assigned to a feature or meta-feature. This
parameter is only appliable when isPairedEnd is TRUE. The fragment
length criteria are specified via minFragLength and maxFragLength.}

\item{requireBothEndsMapped}{A logical(1), indicating if both ends from
the same fragment are required to be successfully aligned before the
fragment can be assigned to a feature or meta-feature. This parameter
is only appliable when isPairedEnd is TRUE.}

\item{minFragLength}{An integer(1), giving the minimum fragment length for
paired-end reads. 50 by default.}

\item{maxFragLength}{An integer(1), giving the maximum fragment length for
paired-end reads. 600 by default. minFragLength and maxFragLength are only
applicable when isPairedEnd is TRUE. Note that when a fragment spans two
or more exons, the observed fragment length might be much bigger than the
nominal fragment length.}

\item{minMQS}{An integer(1), giving the minimum mapping quality score a read
must satisfy in order to be counted. For paired-end reads, at least one end
should satisfy this criteria. 0 by default.}

\item{verbose}{A logical(1) vector, indicating if verbose information for
debugging will be generated. This may include information such as unmatched
chromosomes/contigs between reads and annotation.}
}
\value{
A list of lists, each of the sublist contains an output of the
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}} function for each type of genomic features.
For more details of each sublist, see the \emph{value} section of the
documentation for the \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}} function.
}
\description{
Summarize reads in alignment files, SAM or BAM, to different genomic regions,
such as genic regions, intergenic regions, exonic regions, intronic regions,
rRNA genes, mitochrondrial genome, chloroplast genome (only for plants), and
gene-level exonic regions using \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}.
}
\examples{
bamfiles <- list.files(system.file("extdata", package="NADfinder"),
                       recursive=FALSE,
                       pattern="*bam$",
                       full=TRUE)
names(bamfiles) <- c("G18", "N18")
genomeSW_SAF <-
    generateGenomeSAF(bamfile = bamfiles[1],
                      windowSize = 50000L,
                      step = 5000L,
                      chrExcluded = c("chrM", "MT"))

counts <- swFeatureCounts(bamfiles = bamfiles,
                          saf = genomeSW_SAF,
                          isPaired = TRUE)

}
